package edu.uga.cs.countryquiz;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import java.util.ArrayList;
import java.util.List;
public class QuizData {
    public static final String TAG = "QuizData";
    private SQLiteDatabase db;
    private SQLiteOpenHelper quizDbHelper;
    private static final String[] allColumns = {
            QuizDBHelper.QUIZZES_COLUMN_ID,
            QuizDBHelper.QUIZZES_COLUMN_DATE,
            QuizDBHelper.QUIZZES_COLUMN_RESULT
    };
    public QuizData(Context context) {
        this.quizDbHelper = QuizDBHelper.getInstance(context);
    }
    public void open() {
        db = quizDbHelper.getWritableDatabase();
    }
    public void close() {
        if (quizDbHelper != null)
            quizDbHelper.close();
    }
    public Quiz storeQuiz( Quiz quiz ) {
        ContentValues values = new ContentValues();
        values.put( QuizDBHelper.QUIZZES_COLUMN_DATE, quiz.getDate());
        values.put( QuizDBHelper.QUIZZES_COLUMN_RESULT, quiz.getResult() );

        // Insert the new row into the database table; the id (primary key) will be
        // automatically generated by the database system and returned from db.insert

        long id = db.insert( QuizDBHelper.TABLE_QUIZZES, null, values );
        // store the id in the quiz instance, as it is now persistent
        quiz.setId( id );
        return quiz;
    }

    public ArrayList<Quiz> retrieveAllQuiz() {
        ArrayList<Quiz> quizzes = new ArrayList<>();
        Cursor cursor = null;
        int columnIndex;

        try {
            // Execute the select query and get the Cursor to iterate over the retrieved rows
            cursor = db.query(QuizDBHelper.TABLE_QUIZZES, allColumns,
                    null, null, null, null, null);

            // collect all job leads into a List
            if (cursor != null && cursor.getCount() > 0) {

                while (cursor.moveToNext()) {

                    if (cursor.getColumnCount() >= 2) {

                        // get all attribute values of this job lead
                        columnIndex = cursor.getColumnIndex(QuizDBHelper.QUIZZES_COLUMN_ID);
                        long id = cursor.getLong(columnIndex);
                        columnIndex = cursor.getColumnIndex(QuizDBHelper.QUIZZES_COLUMN_DATE);
                        long date = cursor.getLong(columnIndex);
                        columnIndex = cursor.getColumnIndex(QuizDBHelper.QUIZZES_COLUMN_RESULT);
                        int result = cursor.getInt(columnIndex);

                        // create a new JobLead object and set its state to the retrieved values
                        Quiz quiz = new Quiz(date, result);
                        quiz.setId(id); // set the id (the primary key) of this object
                        // add it to the list
                        quizzes.add(quiz);
                    }
                }
            }
        } finally {
            // we should close the cursor
            if (cursor != null) {
                cursor.close();
            }
        }
        // return a list of retrieved job leads
        return quizzes;
    }
}
